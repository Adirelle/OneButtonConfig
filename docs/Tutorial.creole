== Specification ==

This specification is based on the discussion in this [[http://forums.wowace.com/showthread.php?t=14765|thread]]. The idea is to have graphical addons publish handlers to enable and disable layout and test modes. Configuration mode //does not mean// opening the configuration window but simply show and unlock all their movable frames so the user can arrange them to fit her/his need.

=== Simple handler ===

An handler is simply a function in the global CONFIGMODE_CALLBACKS arrays.

This function, let say handlerFunc, can be called in two ways:

 * ##handlerFunc("ON")##: the addon should enter configuration mode,
 * ##handlerFunc("OFF")##: the addon should leave configuration mode.

Here is a simple handler sample for an addon named MyAddon that provides two methods to lock and unlocks its frames:

<<code:lua>>
-- Create the global table if it does not exist yet
CONFIGMODE_CALLBACKS = CONFIGMODE_CALLBACKS or {}
-- Declare our handler
CONFIGMODE_CALLBACKS["MyAddon"] = function(action)
  if action == "ON" then
    MyAddon:UnlockFrames()
  elseif action == "OFF" then
    MyAddon:LockFrames()
  end
end
<</code>>

=== Multimode handler ===

Some addons can have several different layouts and thus different test modes. This is the case of several unit frame addons.

In this case, these addon can publish a more elaborated handler that supports the following calls :

 * ##handlerFunc("ON", mode)##: enter configuration mode ##mode##
 * ##handlerFunc("OFF")##: leave configuration mode,
 * ##mode1, mode2, mode3, ... = handlerFunc("GETMODES")##: list available modes.

Here is the sample of a unit frame multimode handler:

<<code:lua>>
-- Create the global table if it does not exist yet
CONFIGMODE_CALLBACKS = CONFIGMODE_CALLBACKS or {}
-- Declare our handler
CONFIGMODE_CALLBACKS["MyUnitFrameAddon"] = function(action, mode)
  if action == "ON" then
    MyUnitFrameAddon:EnableTestMode(mode)
  elseif action == "OFF" then
    MyUnitFrameAddon:DisableTestMode()
  elseif action == "GETMODES" then
    return "party", "raid"
  end
end
<</code>>
